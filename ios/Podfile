platform :ios, '15.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  env_root = ENV['FLUTTER_ROOT']
  return env_root unless env_root.nil? || env_root.empty?

  generated = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated)
    raise "#{generated} no existe. Ejecuta 'flutter pub get' primero."
  end
  File.foreach(generated) do |line|
    m = line.match(/FLUTTER_ROOT\=(.*)/)
    return m[1].strip.gsub('\\', '/') if m
  end
  raise "FLUTTER_ROOT no encontrado en #{generated}."
end

require File.expand_path(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper'), __FILE__)
flutter_ios_podfile_setup

# --- Pin global de Firebase a 12.0.0 (evita @sending) ---
$FirebaseSDKVersion = '12.0.0'
pre_install do |installer|
  installer.pod_targets.each do |pod|
    if pod.name =~ /^Firebase(|Core|CoreOnly|Auth|Firestore|Messaging|Installations|Analytics|Crashlytics|RemoteConfig|InAppMessaging|ABTesting|AppCheck|SharedSwift)/
      pod.version = $FirebaseSDKVersion
    end
  end
end
# --------------------------------------------------------

target 'Runner' do
  use_frameworks! :linkage => :static
  use_modular_headers!
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    # Ajustes extra de Flutter (imprescindible)
    flutter_additional_ios_build_settings(target)

    # Fuerza Swift 5.9 para evitar intentar compilar @sending
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      config.build_settings['SWIFT_VERSION'] = '5.9'
    end
  end
end
