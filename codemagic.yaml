workflows:
  ios-release:
    environment:
      groups:
        - app_store_connect
      xcode: latest
    scripts:
      - name: Generar GoogleService-Info.plist
        script: |
          set -euo pipefail
          mkdir -p build_logs
          echo "=== INICIO: GoogleService-Info.plist ===" | tee -a build_logs/prebuild.log
          mkdir -p ios/Runner
          VAR="${GOOGLE_SERVICE_INFO_PLIST:-}"
          if [[ -z "${VAR}" ]]; then
            echo "GOOGLE_SERVICE_INFO_PLIST vac√≠o" | tee -a build_logs/prebuild.log
            exit 1
          fi
          if [[ "${VAR}" =~ ^\<\?xml ]]; then
            echo "${VAR}" > ios/Runner/GoogleService-Info.plist
            echo "Es XML en claro" | tee -a build_logs/prebuild.log
          else
            echo "${VAR}" | base64 --decode > ios/Runner/GoogleService-Info.plist
            echo "Decodificado desde base64" | tee -a build_logs/prebuild.log
          fi
          ls -l ios/Runner/GoogleService-Info.plist | tee -a build_logs/prebuild.log
          head -n 6 ios/Runner/GoogleService-Info.plist | tee -a build_logs/prebuild.log

      - name: Instalar dependencias y CocoaPods
        script: |
          set -euo pipefail
          mkdir -p build_logs
          echo "== POD INSTALL ==" | tee -a build_logs/build.log
          flutter pub get 2>&1 | tee -a build_logs/build.log
          cd ios
          pod install 2>&1 | tee -a ../build_logs/build.log
          cd ..

      - name: Compilar IPA release
        script: |
          set -euo pipefail
          mkdir -p build_logs
          echo "== FLUTTER BUILD ==" | tee -a build_logs/build.log
          flutter build ipa --release --build-number=$BUILD_NUMBER 2>&1 | tee -a build_logs/build.log

    artifacts:
      - build/ios/ipa/*.ipa
      - build_logs/**

    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true
