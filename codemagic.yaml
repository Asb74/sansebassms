workflows:
  ios-release:
    name: iOS Release
    environment:
      groups:
        - app_store_connect      # contiene GOOGLE_SERVICE_INFO_PLIST_B64 y claves ASC
      xcode: latest
      cocoapods: default

    scripts:
      - name: Prepare logs dir
        script: |
          set -euo pipefail
          mkdir -p build_logs

      - name: Prepare GoogleService-Info.plist (strict, logged)
        script: |
          set -euo pipefail
          PLIST_PATH="ios/Runner/GoogleService-Info.plist"
          VAR="${GOOGLE_SERVICE_INFO_PLIST_B64:-}"
          {
            echo "== PRE-BUILD PLIST =="
            echo "VAR length: ${#VAR}"
            mkdir -p ios/Runner
            if [[ -z "$VAR" ]]; then
              echo "FATAL: GOOGLE_SERVICE_INFO_PLIST_B64 is empty"; exit 1
            fi
            # decode base64 (GNU/BSD) con normalizaciÃ³n CRLF; si falla y parece XML, escribir crudo
            if (printf '%s' "$VAR" | tr -d '\r' | base64 --decode > "$PLIST_PATH" 2>/dev/null) || \
               (printf '%s' "$VAR" | tr -d '\r' | base64 -D         > "$PLIST_PATH" 2>/dev/null); then
              echo "Decoded via base64"
            else
              if printf '%.5s' "$VAR" | grep -q '<?xml'; then
                printf '%s' "$VAR" > "$PLIST_PATH"
                echo "Wrote raw XML"
              else
                echo "FATAL: Not valid Base64 nor XML"; exit 1
              fi
            fi
            [[ -f "$PLIST_PATH" ]] || { echo "FATAL: $PLIST_PATH not created"; exit 1; }
            head -c 5 "$PLIST_PATH" | grep -q '<?xml' || { echo "FATAL: $PLIST_PATH not XML"; exit 1; }
            echo "OK -> $PLIST_PATH"
            ls -l "$PLIST_PATH"
            echo "First lines:"
            head -n 8 "$PLIST_PATH"
          } 2>&1 | tee build_logs/01_prebuild_plist.log

      - name: CocoaPods & Workspace (logged)
        script: |
          {
            set -euo pipefail
            echo "== PODS =="
            if grep -q "platform :ios" ios/Podfile; then
              sed -i.bak "s/platform :ios, '.*/platform :ios, '15.0'/" ios/Podfile || true
            else
              echo "platform :ios, '15.0'" >> ios/Podfile
            fi
            cd ios
            pod repo update
            pod install
            cd ..
            test -f ios/Runner.xcworkspace/contents.xcworkspacedata && echo "Workspace OK"
          } 2>&1 | tee build_logs/02_pods_workspace.log

      - name: Flutter build IPA (logged)
        script: |
          {
            set -euo pipefail
            echo "== FLUTTER BUILD =="
            flutter pub get
            flutter build ipa --release --build-number=${BUILD_NUMBER:-7}
          } 2>&1 | tee build_logs/03_flutter_build.log

      - name: Verify plist inside IPA (logged)
        script: |
          {
            set -euo pipefail
            echo "== VERIFY IPA CONTENTS =="
            IPA_PATH=$(ls build/ios/ipa/*.ipa | head -n1)
            echo "IPA: $IPA_PATH"
            unzip -l "$IPA_PATH" | tee build_logs/04_ipa_listing.txt
            unzip -l "$IPA_PATH" | grep -q "GoogleService-Info.plist" \\
              && echo "FOUND GoogleService-Info.plist in IPA" \\
              || { echo "FATAL: GoogleService-Info.plist missing INSIDE IPA"; exit 1; }
          } 2>&1 | tee -a build_logs/04_verify_ipa.log

    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/ipa/*.dSYM.zip
      - build/ios/ipa/*.app.dSYM.zip
      - build_logs/**

    publishing:
      app_store_connect:
        api_key: $APP_STORE_CONNECT_PRIVATE_KEY
        key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER
        issuer_id: $APP_STORE_CONNECT_ISSUER_ID
        submit_to_testflight: true

